apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.getkeepsafe.dexcount'

//Load credentials
def credentialsProperties = new Properties()
credentialsProperties.load(new FileInputStream(rootProject.file("credentials.properties")))

//Libraries versions
def dbflow_version = "4.0.0-beta5"
def support_version = "25.2.0"
def dagger_version = "2.9"
def retrofit_version = "2.2.0"
def stetho_version = "1.3.1"
def butterknife_version = "8.5.1"

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://mvnrepository.com/repos/sonatype-releases" }
        maven { url "https://jitpack.io" }
    }
}

android {

    //Support vector drawables
    defaultConfig {
        vectorDrawables.useSupportLibrary = true
    }
    //Set Java 7
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    //Fix merge libraries conflicts
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
        exclude 'APK LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/README.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/MANIFEST.MF'
    }

    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "name.sportivka.feed"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        release {
            storeFile file(credentialsProperties['storeFile'])
            storePassword credentialsProperties['storePassword']
            keyAlias credentialsProperties['keyAlias']
            keyPassword credentialsProperties['keyPassword']
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "API_KEY", credentialsProperties['apiKeyDebug']
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField "String", "API_KEY", credentialsProperties['apiKeyRelease']
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

}

dependencies {

    /**
     * Calligraphy
     * see https://github.com/chrisjenx/Calligraphy
     */
    compile 'uk.co.chrisjenx:calligraphy:2.2.0'

    /**
     * Joda Time
     * see https://github.com/dlew/joda-time-android
     */
    compile 'net.danlew:android.joda:2.9.4.1'

    /**
     * Android support
     * see https://developer.android.com/topic/libraries/support-library/packages.html
     */

    compile "com.android.support:appcompat-v7:${support_version}"
    compile "com.android.support:support-annotations:${support_version}"
    compile "com.android.support:design:${support_version}"
    compile "com.android.support:recyclerview-v7:${support_version}"

    /**
     * Butterknife
     * see http://jakewharton.github.io/butterknife/
     */

    compile "com.jakewharton:butterknife:${butterknife_version}"
    apt "com.jakewharton:butterknife-compiler:${butterknife_version}"

    /**
     * Dagger 2
     * see http://google.github.io/dagger
     */

    compile "com.google.dagger:dagger:${dagger_version}"
    apt "com.google.dagger:dagger-compiler:${dagger_version}"

    /**
     * ORM DBFlow
     * see https://github.com/Raizlabs/DBFlow
     */

    apt "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"
    compile "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"
    compile "com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"

    /**
     * Retrofit 2
     * see https://square.github.io/retrofit/
     */

    compile "com.squareup.retrofit2:retrofit:${retrofit_version}"
    compile "com.squareup.retrofit2:converter-gson:${retrofit_version}"

    /**
     * Unit,Functional testing
     */

    compile "com.facebook.stetho:stetho:${stetho_version}"
    compile "com.facebook.stetho:stetho-okhttp3:${stetho_version}"
    compile "com.squareup.retrofit2:retrofit-mock:${retrofit_version}"
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'com.android.support:support-v4:25.2.0'
    testCompile 'junit:junit:4.12'
}
